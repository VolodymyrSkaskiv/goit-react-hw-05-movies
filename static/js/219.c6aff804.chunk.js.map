{"version":3,"file":"static/js/219.c6aff804.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/SharedLayout/LoadingDots.js","components/SharedLayout/SharedLayout.styled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  padding-right: 80px;\n  padding-left: 80px;\n  padding-bottom: 40px;\n`;\n\nexport const CastHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const CastList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const CastListItem = styled.li`\n  width: calc((100% - 4 * 40px) / 5);\n  height: 400px;\n  word-wrap: break-word;\n`;\n\nexport const CastInfo = styled.div`\n  margin-top: 20px;\n  max-width: 220px;\n`;\n\nexport const CastName = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const NoCastText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\n  max-width: 500px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/api';\nimport {\n  CastHeader,\n  CastInfo,\n  CastList,\n  CastListItem,\n  CastName,\n  NoCastText,\n  Wrapper,\n} from './Cast.styled';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst Cast = () => {\n  const { movieId } = useParams(); // додаємо параметр movieId\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <CastHeader>Cast</CastHeader> {/* додаємо заголовок */}\n      {/* додаємо перевірку на наявність акторів */}\n      {!error && (\n        <CastList>\n          {cast.map(actor => (\n            <CastListItem className=\"cast-card\" key={actor.id}>\n              {/* додаємо перевірку на наявність фото */}\n              {actor.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                  alt={`${actor.name} profile`}\n                />\n              ) : (\n                <img\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${actor.name} profile`}\n                />\n              )}\n\n              {/* додаємо інформацію про актора */}\n              <CastInfo>\n                <CastName>{actor.name}</CastName>\n                <p>Character: {actor.character}</p>\n              </CastInfo>\n            </CastListItem>\n          ))}\n        </CastList>\n      )}\n      <NoCastText>\n        {error && <h2>We don't have any information about the cast yet.</h2>}\n      </NoCastText>\n      {isLoading && <LoadingIndicator />}\n    </Wrapper>\n  );\n};\n\nexport default Cast;\n","import { LoadingDots, Dot } from './SharedLayout.styled';\n\n// додаємо індикатор завантаження\nexport const LoadingIndicator = () => {\n  return (\n    // додаємо анімацію для індикатора завантаження\n    <LoadingDots>\n      <Dot delay=\"0s\" />\n      <Dot delay=\".2s\" />\n      <Dot delay=\".4s\" />\n    </LoadingDots>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledHeader = styled.header`\n  padding: 20px 30px;\n  text-align: center;\n  box-shadow: 0px 4px 4px #d3d3d3;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  font-size: 24px;\n  font-weight: 500;\n  text-decoration: none;\n  transition: color 0.2s ease-in-out;\n  color: #000000;\n\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    text-decoration: underline;\n  }\n`;\n\nconst bounce = keyframes`\n  0%, 80%, 100% {\n    transform: scale(0);\n  }\n  40% {\n    transform: scale(1);\n  }\n`;\n\nexport const LoadingDots = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n\nexport const Dot = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n  border-radius: 50%;\n  background-color: #1c85ff;\n  animation: ${bounce} 1s infinite ease-in-out;\n  animation-delay: ${({ delay }) => delay};\n`;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '5bfce8d761ea605a18e9b0d713eafd56';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["Wrapper","styled","CastHeader","CastList","CastListItem","CastInfo","CastName","NoCastText","movieId","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchCast","fetchMovieCast","map","actor","className","profile_path","src","alt","name","character","id","LoadingIndicator","delay","StyledHeader","StyledNavLink","NavLink","bounce","keyframes","LoadingDots","Dot","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieById","fetchMovieReviews"],"sourceRoot":""}