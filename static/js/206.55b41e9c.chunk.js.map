{"version":3,"file":"static/js/206.55b41e9c.chunk.js","mappings":"wKAqBA,IAjBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CAAYC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,SACGI,GAASC,KAFCF,EADL,OAUnB,C,mMChBYM,EAAgBC,EAAAA,GAAAA,QAAH,uEAKbC,EAAeD,EAAAA,GAAAA,GAAH,2JASZE,EAAOF,EAAAA,GAAAA,GAAH,gEAKJG,EAAWH,EAAAA,GAAAA,GAAH,8EAMRI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,iO,oICUvB,UAhCiB,WACf,OAA4CM,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,sGAExBJ,GAAa,GAFW,UAGEK,EAAAA,EAAAA,MAHF,gBAGhBC,EAHgB,EAGhBA,QACRR,EAAkBQ,GAJM,gDAMxBJ,GAAS,GANe,yBAQxBF,GAAa,GARW,4EAAH,qDAYzBI,GACD,GAAE,KAGD,iCACE,SAAC,KAAD,6BAECP,EAAeU,OAAS,IAAK,SAAC,IAAD,CAAW5B,OAAQkB,IAChDE,IAAa,SAAC,IAAD,IACbE,IAAS,6DAGf,C,mMClCKO,EAAU,6BACVC,EAAU,mCAEHJ,EAAgB,mCAAG,sGACPK,EAAAA,EAAAA,IAAA,UAClBF,EADkB,yCACsBC,IAFf,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,mCACgBC,EADhB,iCACgDI,EADhD,gCADO,uBACtBF,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,oBACoBN,EADpB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,4BAC4BN,EAD5B,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oBACCO,EADD,6BAC6BN,EAD7B,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieList/MovieList.js","components/MovieList/MovieList.styled.js","pages/HomePage.js","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { StyledSection, StyledLink, List, ListItem } from './MovieList.styled'; // додаємо стилі\nimport { useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <StyledSection>\n      <List>\n        {movies.map(({ id, title, name }) => (\n          <ListItem key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              {title || name}\n            </StyledLink>\n          </ListItem>\n        ))}\n      </List>\n    </StyledSection>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      release_date: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: #0d57aa;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0d57aa;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    border-bottom: 2px solid #1c85ff;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from '../services/api';\nimport MovieList from 'components/MovieList/MovieList';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\nimport { SectionTitle } from 'components/MovieList/MovieList.styled';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <SectionTitle>Trending today</SectionTitle>\n\n      {trendingMovies.length > 0 && <MovieList movies={trendingMovies} />}\n      {isLoading && <LoadingIndicator />}\n      {error && <h2>Sorry we didn't find this page</h2>}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '5bfce8d761ea605a18e9b0d713eafd56';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${baseURL}/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["movies","location","useLocation","map","id","title","name","to","state","from","StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","length","baseURL","API_KEY","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}